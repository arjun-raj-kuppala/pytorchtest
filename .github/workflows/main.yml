# This is a basic workflow to help you get started with Actions

name: Pytorch CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      JOB_BASE_NAME: pytorch-linux-bionic-rocm4.2-py3.6-test
      COMPACT_JOB_NAME: pytorch-linux-bionic-rocm4.2-py3.6-test
      CUSTOM_TEST_ARTIFACT_BUILD_DIR: build/custom_test_artifacts
      TORCH_CUDA_ARCH_LIST: 5.2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout PyTorch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # deep clone, to allow sharding to use git rev-list
          submodules: recursive

      - name: Preserve github env variables for use in docker
        run: |
          env | grep '^GITHUB' > "/tmp/github_env_${GITHUB_RUN_ID}"

      - name: Build PyTorch
        run: |
          docker run \
            -e JOB_BASE_NAME \
            -e COMPACT_JOB_NAME="pytorch-linux-bionic-rocm4.2-py3.6-test" \
            -e MAX_JOBS="$(nproc --ignore=2)" \
            -e CUSTOM_TEST_ARTIFACT_BUILD_DIR \
            -e SKIP_SCCACHE_INITIALIZATION=1 \
            -e TORCH_CUDA_ARCH_LIST \
            --env-file="/tmp/github_env_${GITHUB_RUN_ID}" \
            --security-opt seccomp=unconfined \
            --cap-add=SYS_PTRACE \
            --tty \
            --user jenkins \
            -v "${GITHUB_WORKSPACE}:/var/lib/jenkins/workspace" \
            -w /var/lib/jenkins/workspace \
            --device=/dev/dri \
            --device=/dev/kfd \
            --device=/dev/mem \
            --group-add daemon \
            --shm-size=8G \
            --entrypoint='' \
            rocm/pytorch:rocm4.3_ubuntu18.04_py3.6_pytorch \
            sh -c 'sudo chown -R jenkins . && .jenkins/pytorch/build.sh'
